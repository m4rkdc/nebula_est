// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: nest.proto

package models

import (
	cert "github.com/slackhq/nebula/cert"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RawNebulaCsr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerKeygen *bool    `protobuf:"varint,1,opt,name=ServerKeygen,proto3,oneof" json:"ServerKeygen,omitempty"`
	Rekey        *bool    `protobuf:"varint,2,opt,name=Rekey,proto3,oneof" json:"Rekey,omitempty"`
	Hostname     string   `protobuf:"bytes,3,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	PublicKey    []byte   `protobuf:"bytes,4,opt,name=PublicKey,proto3,oneof" json:"PublicKey,omitempty"`
	Groups       []string `protobuf:"bytes,5,rep,name=Groups,proto3" json:"Groups,omitempty"`
	Ip           *string  `protobuf:"bytes,6,opt,name=Ip,proto3,oneof" json:"Ip,omitempty"` //optional bytes Pop = 7;
}

func (x *RawNebulaCsr) Reset() {
	*x = RawNebulaCsr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawNebulaCsr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawNebulaCsr) ProtoMessage() {}

func (x *RawNebulaCsr) ProtoReflect() protoreflect.Message {
	mi := &file_nest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawNebulaCsr.ProtoReflect.Descriptor instead.
func (*RawNebulaCsr) Descriptor() ([]byte, []int) {
	return file_nest_proto_rawDescGZIP(), []int{0}
}

func (x *RawNebulaCsr) GetServerKeygen() bool {
	if x != nil && x.ServerKeygen != nil {
		return *x.ServerKeygen
	}
	return false
}

func (x *RawNebulaCsr) GetRekey() bool {
	if x != nil && x.Rekey != nil {
		return *x.Rekey
	}
	return false
}

func (x *RawNebulaCsr) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RawNebulaCsr) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *RawNebulaCsr) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *RawNebulaCsr) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

type RawCaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NebulaCert       *cert.RawNebulaCertificate `protobuf:"bytes,1,opt,name=NebulaCert,proto3" json:"NebulaCert,omitempty"`
	NebulaPrivateKey []byte                     `protobuf:"bytes,2,opt,name=NebulaPrivateKey,proto3,oneof" json:"NebulaPrivateKey,omitempty"`
}

func (x *RawCaResponse) Reset() {
	*x = RawCaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawCaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCaResponse) ProtoMessage() {}

func (x *RawCaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawCaResponse.ProtoReflect.Descriptor instead.
func (*RawCaResponse) Descriptor() ([]byte, []int) {
	return file_nest_proto_rawDescGZIP(), []int{1}
}

func (x *RawCaResponse) GetNebulaCert() *cert.RawNebulaCertificate {
	if x != nil {
		return x.NebulaCert
	}
	return nil
}

func (x *RawCaResponse) GetNebulaPrivateKey() []byte {
	if x != nil {
		return x.NebulaPrivateKey
	}
	return nil
}

type RawConfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NebulaConf []byte   `protobuf:"bytes,1,opt,name=NebulaConf,proto3" json:"NebulaConf,omitempty"`
	Groups     []string `protobuf:"bytes,2,rep,name=Groups,proto3" json:"Groups,omitempty"`
	Ip         string   `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	NebulaPath string   `protobuf:"bytes,4,opt,name=NebulaPath,proto3" json:"NebulaPath,omitempty"`
}

func (x *RawConfResponse) Reset() {
	*x = RawConfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawConfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawConfResponse) ProtoMessage() {}

func (x *RawConfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawConfResponse.ProtoReflect.Descriptor instead.
func (*RawConfResponse) Descriptor() ([]byte, []int) {
	return file_nest_proto_rawDescGZIP(), []int{2}
}

func (x *RawConfResponse) GetNebulaConf() []byte {
	if x != nil {
		return x.NebulaConf
	}
	return nil
}

func (x *RawConfResponse) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *RawConfResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RawConfResponse) GetNebulaPath() string {
	if x != nil {
		return x.NebulaPath
	}
	return ""
}

type RawNebulaCsrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NebulaCert       *cert.RawNebulaCertificate `protobuf:"bytes,1,opt,name=NebulaCert,proto3" json:"NebulaCert,omitempty"`
	NebulaPrivateKey []byte                     `protobuf:"bytes,2,opt,name=NebulaPrivateKey,proto3,oneof" json:"NebulaPrivateKey,omitempty"`
	NebulaConf       []byte                     `protobuf:"bytes,3,opt,name=NebulaConf,proto3,oneof" json:"NebulaConf,omitempty"`
	NebulaPath       *string                    `protobuf:"bytes,4,opt,name=NebulaPath,proto3,oneof" json:"NebulaPath,omitempty"`
}

func (x *RawNebulaCsrResponse) Reset() {
	*x = RawNebulaCsrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawNebulaCsrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawNebulaCsrResponse) ProtoMessage() {}

func (x *RawNebulaCsrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawNebulaCsrResponse.ProtoReflect.Descriptor instead.
func (*RawNebulaCsrResponse) Descriptor() ([]byte, []int) {
	return file_nest_proto_rawDescGZIP(), []int{3}
}

func (x *RawNebulaCsrResponse) GetNebulaCert() *cert.RawNebulaCertificate {
	if x != nil {
		return x.NebulaCert
	}
	return nil
}

func (x *RawNebulaCsrResponse) GetNebulaPrivateKey() []byte {
	if x != nil {
		return x.NebulaPrivateKey
	}
	return nil
}

func (x *RawNebulaCsrResponse) GetNebulaConf() []byte {
	if x != nil {
		return x.NebulaConf
	}
	return nil
}

func (x *RawNebulaCsrResponse) GetNebulaPath() string {
	if x != nil && x.NebulaPath != nil {
		return *x.NebulaPath
	}
	return ""
}

var File_nest_proto protoreflect.FileDescriptor

var file_nest_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6e, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x1a, 0x16, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2d, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01, 0x0a,
	0x0c, 0x52, 0x61, 0x77, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x73, 0x72, 0x12, 0x27, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x67, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x52, 0x65, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x05, 0x52, 0x65, 0x6b, 0x65, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x02, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x02, 0x49, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x52, 0x65, 0x6b, 0x65, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x70, 0x22, 0x91, 0x01,
	0x0a, 0x0d, 0x52, 0x61, 0x77, 0x43, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x4e, 0x65,
	0x62, 0x75, 0x6c, 0x61, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x10, 0x4e,
	0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x10, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x22, 0x79, 0x0a, 0x0f, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x6f,
	0x6e, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x61, 0x74, 0x68, 0x22, 0x80, 0x02, 0x0a,
	0x14, 0x52, 0x61, 0x77, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x73, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43,
	0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x72, 0x74,
	0x2e, 0x52, 0x61, 0x77, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x65, 0x72,
	0x74, 0x12, 0x2f, 0x0a, 0x10, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x10, 0x4e,
	0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4e, 0x65, 0x62, 0x75, 0x6c,
	0x61, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x4e,
	0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x61, 0x74, 0x68, 0x42,
	0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x34,
	0x72, 0x6b, 0x64, 0x63, 0x2f, 0x6e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x5f, 0x65, 0x73, 0x74, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_nest_proto_rawDescOnce sync.Once
	file_nest_proto_rawDescData = file_nest_proto_rawDesc
)

func file_nest_proto_rawDescGZIP() []byte {
	file_nest_proto_rawDescOnce.Do(func() {
		file_nest_proto_rawDescData = protoimpl.X.CompressGZIP(file_nest_proto_rawDescData)
	})
	return file_nest_proto_rawDescData
}

var file_nest_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nest_proto_goTypes = []interface{}{
	(*RawNebulaCsr)(nil),              // 0: models.RawNebulaCsr
	(*RawCaResponse)(nil),             // 1: models.RawCaResponse
	(*RawConfResponse)(nil),           // 2: models.RawConfResponse
	(*RawNebulaCsrResponse)(nil),      // 3: models.RawNebulaCsrResponse
	(*cert.RawNebulaCertificate)(nil), // 4: cert.RawNebulaCertificate
}
var file_nest_proto_depIdxs = []int32{
	4, // 0: models.RawCaResponse.NebulaCert:type_name -> cert.RawNebulaCertificate
	4, // 1: models.RawNebulaCsrResponse.NebulaCert:type_name -> cert.RawNebulaCertificate
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_nest_proto_init() }
func file_nest_proto_init() {
	if File_nest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawNebulaCsr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawCaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawConfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawNebulaCsrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nest_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_nest_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_nest_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nest_proto_goTypes,
		DependencyIndexes: file_nest_proto_depIdxs,
		MessageInfos:      file_nest_proto_msgTypes,
	}.Build()
	File_nest_proto = out.File
	file_nest_proto_rawDesc = nil
	file_nest_proto_goTypes = nil
	file_nest_proto_depIdxs = nil
}
